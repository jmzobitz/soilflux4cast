name: Acquire NEON data and fluxes for the previous month
permissions:
  contents: write
  pull-requests: write

on:
  schedule:
    - cron: '0 10 15 * *'  # Run at 10 UTC
  workflow_dispatch:     # Allow manual trigger

jobs:
  update-forecast:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Install system dependencies for R packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            libfreetype6-dev \
            libpng-dev \
            libtiff5-dev \
            libjpeg-dev \
            libgit2-dev \
            libfontconfig1-dev \
            pkg-config
            
      - name: Install CRAN packages
        run: Rscript -e 'install.packages(c("neonUtilities","tidyverse","devtools"), repos = "https://cloud.r-project.org")'
        
      - name: Install neonSoilFlux from GitHub
        run: |
          Rscript -e 'devtools::install_github("jmzobitz/neonSoilFlux", build = TRUE, build_opts = c("--no-resave-data", "--no-manual"), force = TRUE)'

      - name: Set forecast date and output file
        run: |
          #NEON_DATE=$(date -d 'last month' +%Y-%m)
          NEON_DATE=$(date -d '2 months ago' +%Y-%m)
          echo "NEON_DATE=$NEON_DATE" >> $GITHUB_ENV

      - name: Run daily forecast script
        run: Rscript scripts/daily_prediction.R "$NEON_DATE"

      - name: Configure Git with your user info
        run: |
          git config --global user.name "jmzobitz"
          git config --global user.email "zobitz@augsburg.edu"

      - name: Commit forecast update to branch
        run: |
          BRANCH="new-neon-month"
          git checkout -B $BRANCH
          git add data/outputs/neon/forecast_prediction-*-"$NEON_DATE".csv || echo "No files to add"
          git add data/drivers/observed/neon/soil_drivers-*-"$NEON_DATE".csv || echo "No files to add"
          git commit -m "Add forecast output for $NEON_DATE" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin $BRANCH --force || echo "Push failed or nothing to push"

      - name: Create and merge pull request
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          BRANCH="daily-forecast-update"

          # Only create PR if it doesn't already exist
          if gh pr view $BRANCH --json number > /dev/null 2>&1; then
            echo "PR already exists for $BRANCH"
          else
            gh pr create \
              --base main \
              --head $BRANCH \
              --title "Auto PR: Forecast update $NEON_DATE" \
              --body "Automated forecast update."
          fi

          # Merge and auto-delete branch if PR exists
          if gh pr view $BRANCH --json number > /dev/null 2>&1; then
            gh pr merge --squash --admin || echo "Merge failed"
          else
            echo "No PR to merge"
          fi